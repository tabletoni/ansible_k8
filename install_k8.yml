---
- name: Instala K8
  hosts: k8
  vars:
    - k8_user: toni
  tasks:

  - name: workarround problema resolver dns
    command: "systemd-resolve --status"

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - gpg
  - name: Instala docker
    apt:
      name: docker.io
      update_cache: yes
      state: latest

  - name: Enable docker
    systemd: 
      name: docker
      state: started
      enabled: yes

  - name: AÃ±ade key del repo de k8
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg  

  - name: Add kubernetes respository
    apt_repository:
      repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
      update-cache: yes

  - name: Instala kubeadm
    apt:
      name: kubeadm
       
  - name: Deshabilita swap
    command: "swapoff -a"

  - name: Inicializa nodo maestro  
    command: "kubeadm init --pod-network-cidr=10.244.0.0/16"
    register: salida_kubeadm_init
    when: "'masters' in group_names"

  - name: Copia config a usuario
    file:
      path: "~{{ k8_user }}/.kube"
      state: directory
    become_user: "{{ k8_user }}"

  - name: Trae a host de control la conf de k8 del mnaster
    fetch:
      src: /etc/kubernetes/admin.conf
      dest: /tmp/
    when: "'masters' in group_names"

  - name: Copia config kube
    copy:
      src: "/tmp/master/etc/kubernetes/admin.conf"
      dest: "~{{ k8_user }}/.kube/config"
      owner: "{{ k8_user }}"
      group: "{{ k8_user }}"

  - name: Despliega red flannel
    command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
    become_user: "{{ k8_user }}"
    when: "'masters' in group_names"

  - name: Obtener comando join para los workers
    command: "kubeadm token create --print-join-command"
    register: comando_join
    when: "'masters' in group_names"

    # - name: Muestra join
    #debug: var=hostvars['master'].comando_join.stdout

  - name: Ejecuta kubeadm join en workers
    command: "{{ hostvars['master'].comando_join.stdout }}" 
    register: salida_kubeadm_join
    when: "'workers' in group_names"

  - name: Mostrar salida join
    debug: var=salida_kubeadm_join.stdout
    when: "'workers' in group_names"

     
